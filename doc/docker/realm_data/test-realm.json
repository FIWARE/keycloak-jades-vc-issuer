{
      "id": "oid4vc-test",
      "realm": "oid4vc-test",
      "displayName": "Keycloak",
      "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
      "enabled": true,
      "attributes": {
          "frontendUrl": "http://localhost:8080/",
          "issuerDid": "did:elsi:VATDE-1234567"
      },
      "sslRequired": "none",
      "roles": {
        "realm": [
          {
            "name": "user",
            "description": "User privileges",
            "composite": false,
            "clientRole": false,
            "containerId": "dome",
            "attributes": {}
          }
        ],
        "client": {
          "did:web:test-marketplace.org": [
            {
              "name": "consumer",
              "description": "Is allowed to buy.",
              "clientRole": true
            }
          ]
        }
      },
      "groups": [
      ],
      "users": [
         {
          "username": "test-user",
          "enabled": true,
          "email": "test@user.org",
          "firstName": "Test",
          "lastName": "Employee",
          "credentials": [
            {
              "type": "password",
              "value": "test"
            }
          ],
          "clientRoles": {
            "did:web:test-marketplace.org" : [
              "consumer"
            ],
            "account": [
              "view-profile",
              "manage-account"
            ]
          },
          "groups": [
          ]
        }
      ],
      "clients": [
        {
          "clientId": "did:web:test-marketplace.org",
          "enabled": true,
          "description": "Client to connect to the marketplace portal.",
          "surrogateAuthRequired": false,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "defaultRoles": [],
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "oid4vc",
          "attributes": {
              "client.secret.creation.time": "1675260539",
	      "vc.natural-person.format": "jwt_vc",
              "vc.natural-person.scope": "NaturalPersonCredential",
              "vc.verifiable-credential.format": "jwt_vc",
              "vc.verifiable-credential.scope": "VerifiableCredential",
              "expiryInMin": "3600"
          },
          "protocolMappers": [
            { 
              "name": "target-role-mapper",
              "protocol": "oid4vc",
              "protocolMapper": "oid4vc-target-role-mapper",
              "config": {
                "subjectProperty": "roles",
                "clientId": "did:web:test-marketplace.org",
                "supportedCredentialTypes": "NaturalPersonCredential"
              }
            },
	    {
		"name": "target-vc-role-mapper",
		"protocol": "oid4vc",
		"protocolMapper": "oid4vc-target-role-mapper",
		"config": {
		    "subjectProperty": "roles",
		    "clientId": "did:web:test-marketplace.org",
		    "supportedCredentialTypes": "VerifiableCredential"
		}
            },
            { 
              "name": "email-mapper",
              "protocol": "oid4vc",
              "protocolMapper": "oid4vc-user-attribute-mapper",
              "config": {
                "subjectProperty": "email",
                "userAttribute": "email",
                "supportedCredentialTypes": "NaturalPersonCredential"
              }
            },
	    { 
		"name": "vc-email-mapper",
		"protocol": "oid4vc",
		"protocolMapper": "oid4vc-user-attribute-mapper",
		"config": {
                    "subjectProperty": "email",
                    "userAttribute": "email",
                    "supportedCredentialTypes": "VerifiableCredential"
		}
            }
          ],
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [],
          "optionalClientScopes": []
        },
	{
	    "clientId": "login-client",
	    "name": "OIDC Login Client",
	    "description": "",
	    "rootUrl": "",
	    "adminUrl": "",
	    "baseUrl": "",
	    "surrogateAuthRequired": false,
	    "enabled": true,
	    "alwaysDisplayInConsole": false,
	    "clientAuthenticatorType": "client-secret",
	    "secret": "pR1d6PbbKeUfJTLDs3ksHeYqdSXt9Udv",
	    "redirectUris": [
		"/*"
	    ],
	    "webOrigins": [
		"/*"
	    ],
	    "notBefore": 0,
	    "bearerOnly": false,
	    "consentRequired": false,
	    "standardFlowEnabled": true,
	    "implicitFlowEnabled": false,
	    "directAccessGrantsEnabled": true,
	    "serviceAccountsEnabled": false,
	    "publicClient": false,
	    "frontchannelLogout": true,
	    "protocol": "openid-connect",
	    "attributes": {
		"oidc.ciba.grant.enabled": "false",
		"client.secret.creation.time": "1714733694",
		"backchannel.logout.session.required": "true",
		"oauth2.device.authorization.grant.enabled": "false",
		"backchannel.logout.revoke.offline.tokens": "false"
	    },
	    "authenticationFlowBindingOverrides": {},
	    "fullScopeAllowed": true,
	    "nodeReRegistrationTimeout": -1,
	    "defaultClientScopes": [],
	    "optionalClientScopes": [],
	    "access": {
		"view": true,
		"configure": true,
		"manage": true
	    }
	}
      ],
      "clientScopes": [
        {
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            },
            {
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String"
              }
            },
            {
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            },
            {
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
      ],
      "defaultOptionalClientScopes": [
      ],
      "components": {
        "org.keycloak.protocol.oid4vc.issuance.signing.VerifiableCredentialsSigningService": [
          {
              "id": "jades-jws-signing",
              "name": "jades-jws-signing-service", 
              "providerId": "jades-jws-signing",
              "subComponents": {},
              "config": {
		  "keyId": ["kid"],
    		  "algorithmType": ["RS256"],
		  "tokenType": ["JWT"],
		  "digestAlgorithm": ["SHA256"]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
        {
          "id": "a4589e8f-7f82-4345-b2ea-ccc9d4366600",
          "name": "test-key",
          "providerId": "java-keystore",
          "subComponents": {},
          "config": {
            "keystore": [ "/keystore/keystore.jks"],
            "keystorePassword": [ "password"],
            "keyAlias": [ "test-keystore" ],
            "keyPassword": [ "password"],
            "kid": [ "kid"],
            "active": [
              "true"
            ],
            "priority": [
              "0"
            ],
            "enabled": [
              "true"
            ],
            "algorithm": [
              "RS256"
            ]
          }
        }]
      }
    }
